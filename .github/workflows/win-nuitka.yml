on:
  push:
    branches:
      - main
      - dev-2.0
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Fetch all tags
        run: git fetch --tags origin

      - name: Get latest Git tag
        id: get_version
        run: |
          for /f "tokens=*" %%i in ('git describe --tags --abbrev=0 2^>nul') do set VERSION=%%i
          if not defined VERSION set VERSION=v0.1.0
          echo VERSION=%VERSION% >> $env:GITHUB_ENV
          echo Resolved version: %VERSION%
        shell: cmd

     
      - name: Setup FFmpeg
        uses: federicocarboni/setup-ffmpeg@v3.1
        with:
          ffmpeg-version: release  # Specify the desired FFmpeg version
          architecture: x64 
          
      - name: Add FFmpeg to PATH
        run: |
          $ffmpegPath = (Get-Command ffmpeg).Source
          $env:Path += ";$($ffmpegPath.Substring(0, $ffmpegPath.LastIndexOf('\')))"
          $ffmpegPath 
        shell: pwsh
          
      - name: Verify FFmpeg installation
        run: |
          where ffmpeg
          ffmpeg -version 
          
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Set up Python virtual environment
        run: |
          python -m venv .venv
     
      - name: Activate virtual environment
        run: |
          .\.venv\Scripts\Activate
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka
     
      - name: Verificar existência do diretório assets do whisper
        run: |
          $whisperPath = (python -c "import whisper; print(whisper.__file__)").Trim()
          $assetsPath = Join-Path (Split-Path $whisperPath) 'assets'
          if (Test-Path $assetsPath) {
            Write-Host "O diretório 'assets' existe em: $assetsPath"
          } else {
            Write-Host "O diretório 'assets' NÃO existe."
            exit 1
          }
          
      - name: Compile with Nuitka
        run: |
          $ffmpegPath = (Get-Command ffmpeg).Source
          nuitka `
            --assume-yes-for-downloads `
            --enable-plugin=pyqt5 `
            --include-data-files="pytranscriber.sqlite=pytranscriber.sqlite" `
            --include-data-files="$ffmpegPath=ffmpeg.exe" `
            --include-data-files="pytranscriber/gui/*.qm=pytranscriber/gui/" `
            --include-package-data="whisper:assets/*=whisper/assets" `
            main.py `
            --onefile `
            --output-dir=dist `
            --windows-console-mode=disable
      
      - name: Rename and zip the .app bundle with version number
        run: |
          cd dist
          move /Y main.exe pyTranscriber-${VERSION}.exe
          tar -a -cf pyTranscriber-${VERSION}.zip pyTranscriber-${VERSION}.exe
        shell: cmd
     
      - name: Upload built executable
        uses: actions/upload-artifact@v4
        with:
          name: pyTranscriber-${VERSION}
          path: ./dist/pyTranscriber-${VERSION}.zip # Adjust this path if Nuitka outputs elsewhere

  download:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download built executable
        uses: actions/download-artifact@v4
        with:
          path: ./output

      - name: List downloaded files
        run: dir ./output
